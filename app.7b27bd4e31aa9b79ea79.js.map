{"version":3,"sources":["webpack:///./app/components/Footer/style.css?30f7","webpack:///./app/components/TodoTextInput/style.css?71e8","webpack:///./app/components/TodoList/style.css?14c4","webpack:///./app/index.tsx","webpack:///./app/containers/App/style.css","webpack:///./app/models/TodoModel.ts","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/TodoTextInput/index.tsx","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/TodoItem/index.tsx","webpack:///./app/components/TodoList/index.tsx","webpack:///./app/containers/App/index.tsx","webpack:///./app/utils/index.ts","webpack:///./app/middleware/logger.ts","webpack:///./app/reducers/todos.ts","webpack:///./app/reducers/index.ts","webpack:///./app/store/index.ts","webpack:///./main.tsx","webpack:///./app/actions/todos.ts","webpack:///./app/components/TodoItem/style.css?4c11"],"names":["module","exports","normal","filters","selected","count","clearCompleted","new","edit","main","editing","view","toggle","completed","destroy","toggleAll","__webpack_require__","d","__webpack_exports__","App","react__WEBPACK_IMPORTED_MODULE_0__","react_router__WEBPACK_IMPORTED_MODULE_1__","react_router__WEBPACK_IMPORTED_MODULE_2__","app_containers_App__WEBPACK_IMPORTED_MODULE_3__","react_hot_loader__WEBPACK_IMPORTED_MODULE_4__","Object","path","component","TodoModel","Filter","FILTER_TITLES","Footer_a","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","Footer_Footer","_super","Footer","__extends","prototype","renderTodoCount","activeCount","this","props","itemWord","react","className","Footer_style","renderFilterLink","filter","_b","selectedFilter","onClickFilter","classnames","_a","style","cursor","onClick","children","renderClearButton","completedCount","onClickClearCompleted","render","_this","keys","map","key","defaultProps","TodoTextInput_TodoTextInput","TodoTextInput","context","call","state","text","handleBlur","bind","handleSubmit","handleChange","TodoTextInput_extends","event","currentTarget","value","trim","which","onSave","newTodo","setState","target","classes","TodoTextInput_style","type","autoFocus","placeholder","onBlur","onChange","onKeyDown","Header_Header","Header","handleSave","Header_extends","length","addTodo","TodoItem_TodoItem","TodoItem","TodoItem_extends","handleDoubleClick","id","deleteTodo","editTodo","element","todo","completeTodo","TodoItem_style","checked","onDoubleClick","TodoList_TodoList","TodoList","TodoList_extends","renderToggleAll","todos","actions","hasIncompleted","some","TodoList_style","completeAll","FILTER_VALUES","FILTER_FUNCTIONS","App_a","App_App","handleClearCompleted","handleFilterChange","App_extends","history","push","filteredTodos","reduce","__decorate","es","ownProps","hash","location","replace","find","dispatch","redux","omitKeys","_i","arguments","res","includes","omit","actions_todos","logger","store","next","action","todoReducer","handleActions","Type","ADD_TODO","payload","max","Math","DELETE_TODO","EDIT_TODO","__assign","COMPLETE_TODO","COMPLETE_ALL","CLEAR_COMPLETED","rootReducer","initialState","middleware","main_history","history_es","main_store","react_dom","Router","app","document","getElementById","TodoActions","redux_actions__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"app.7b27bd4e31aa9b79ea79.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_11G5b\",\"filters\":\"_2Rdg5\",\"selected\":\"KA4tP\",\"count\":\"_2aiYj\",\"clearCompleted\":\"_2VhED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"_1LCq9\",\"edit\":\"_2TStV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_1MAoA\",\"normal\":\"l9hMg\",\"editing\":\"_2LE8Z\",\"edit\":\"_3IEu8\",\"view\":\"cswuJ\",\"toggle\":\"_1euYG\",\"completed\":\"_1VEnC\",\"destroy\":\"_3_fjc\",\"toggleAll\":\"_1L1bM\"};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { App as TodoApp } from 'app/containers/App';\r\nimport { hot } from 'react-hot-loader';\r\n\r\nexport const App = hot(module)(() => (\r\n  <Switch>\r\n    <Route path=\"/\" component={TodoApp} />\r\n  </Switch>\r\n));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_1XP1U\"};","/** TodoMVC model definitions **/\r\n\r\nexport interface TodoModel {\r\n  id: number;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport namespace TodoModel {\r\n  export enum Filter {\r\n    SHOW_ALL = 'all',\r\n    SHOW_ACTIVE = 'active',\r\n    SHOW_COMPLETED = 'completed'\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport * as classNames from 'classnames';\r\nimport { TodoModel } from 'app/models';\r\n\r\nexport const FILTER_TITLES = {\r\n  [TodoModel.Filter.SHOW_ALL]: 'All',\r\n  [TodoModel.Filter.SHOW_ACTIVE]: 'Active',\r\n  [TodoModel.Filter.SHOW_COMPLETED]: 'Completed'\r\n};\r\n\r\nexport namespace Footer {\r\n  export interface Props {\r\n    filter: TodoModel.Filter;\r\n    activeCount?: number;\r\n    completedCount?: number;\r\n    onClickFilter: (filter: TodoModel.Filter) => any;\r\n    onClickClearCompleted: () => any;\r\n  }\r\n}\r\n\r\nexport class Footer extends React.Component<Footer.Props> {\r\n  static defaultProps: Partial<Footer.Props> = {\r\n    activeCount: 0,\r\n    completedCount: 0\r\n  };\r\n\r\n  renderTodoCount(): JSX.Element {\r\n    const { activeCount } = this.props;\r\n    const itemWord = activeCount === 1 ? 'item' : 'items';\r\n\r\n    return (\r\n      <span className={style.count}>\r\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\r\n      </span>\r\n    );\r\n  }\r\n\r\n  renderFilterLink(filter: TodoModel.Filter): JSX.Element {\r\n    const { filter: selectedFilter, onClickFilter } = this.props;\r\n\r\n    return (\r\n      <a\r\n        className={classNames({ [style.selected]: filter === selectedFilter })}\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() => onClickFilter(filter)}\r\n        children={FILTER_TITLES[filter]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderClearButton(): JSX.Element | void {\r\n    const { completedCount, onClickClearCompleted } = this.props;\r\n    if (completedCount! > 0) {\r\n      return (\r\n        <button\r\n          className={style.clearCompleted}\r\n          onClick={onClickClearCompleted}\r\n          children={'Clear completed'}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className={style.normal}>\r\n        {this.renderTodoCount()}\r\n        <ul className={style.filters}>\r\n          {(Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map((key) => (\r\n            <li key={key} children={this.renderFilterLink(TodoModel.Filter[key])} />\r\n          ))}\r\n        </ul>\r\n        {this.renderClearButton()}\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport * as style from './style.css';\r\n\r\nexport namespace TodoTextInput {\r\n  export interface Props {\r\n    text?: string;\r\n    placeholder?: string;\r\n    newTodo?: boolean;\r\n    editing?: boolean;\r\n    onSave: (text: string) => void;\r\n  }\r\n\r\n  export interface State {\r\n    text: string;\r\n  }\r\n}\r\n\r\nexport class TodoTextInput extends React.Component<TodoTextInput.Props, TodoTextInput.State> {\r\n  constructor(props: TodoTextInput.Props, context?: any) {\r\n    super(props, context);\r\n    this.state = { text: this.props.text || '' };\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit(event: React.KeyboardEvent<HTMLInputElement>) {\r\n    const text = event.currentTarget.value.trim();\r\n    if (event.which === 13) {\r\n      this.props.onSave(text);\r\n      if (this.props.newTodo) {\r\n        this.setState({ text: '' });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ text: event.target.value });\r\n  }\r\n\r\n  handleBlur(event: React.FocusEvent<HTMLInputElement>) {\r\n    const text = event.target.value.trim();\r\n    if (!this.props.newTodo) {\r\n      this.props.onSave(text);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const classes = classNames(\r\n      {\r\n        [style.edit]: this.props.editing,\r\n        [style.new]: this.props.newTodo\r\n      },\r\n      style.normal\r\n    );\r\n\r\n    return (\r\n      <input\r\n        className={classes}\r\n        type=\"text\"\r\n        autoFocus\r\n        placeholder={this.props.placeholder}\r\n        value={this.state.text}\r\n        onBlur={this.handleBlur}\r\n        onChange={this.handleChange}\r\n        onKeyDown={this.handleSubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { TodoTextInput } from '../TodoTextInput';\r\nimport { TodoActions } from 'app/actions/todos';\r\n\r\nexport namespace Header {\r\n  export interface Props {\r\n    addTodo: typeof TodoActions.addTodo;\r\n  }\r\n}\r\n\r\nexport class Header extends React.Component<Header.Props> {\r\n  constructor(props: Header.Props, context?: any) {\r\n    super(props, context);\r\n    this.handleSave = this.handleSave.bind(this);\r\n  }\r\n\r\n  handleSave(text: string) {\r\n    if (text.length) {\r\n      this.props.addTodo({ text });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h1>Todos</h1>\r\n        <TodoTextInput newTodo onSave={this.handleSave} placeholder=\"What needs to be done?\" />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport * as style from './style.css';\r\nimport { TodoModel } from 'app/models';\r\nimport { TodoActions } from 'app/actions';\r\nimport { TodoTextInput } from '../TodoTextInput';\r\n\r\nexport namespace TodoItem {\r\n  export interface Props {\r\n    todo: TodoModel;\r\n    editTodo: typeof TodoActions.editTodo;\r\n    deleteTodo: typeof TodoActions.deleteTodo;\r\n    completeTodo: typeof TodoActions.completeTodo;\r\n  }\r\n\r\n  export interface State {\r\n    editing: boolean;\r\n  }\r\n}\r\n\r\nexport class TodoItem extends React.Component<TodoItem.Props, TodoItem.State> {\r\n  constructor(props: TodoItem.Props, context?: any) {\r\n    super(props, context);\r\n    this.state = { editing: false };\r\n  }\r\n\r\n  handleDoubleClick() {\r\n    this.setState({ editing: true });\r\n  }\r\n\r\n  handleSave(id: number, text: string) {\r\n    if (text.length === 0) {\r\n      this.props.deleteTodo(id);\r\n    } else {\r\n      this.props.editTodo({ id, text });\r\n    }\r\n    this.setState({ editing: false });\r\n  }\r\n\r\n  render() {\r\n    const { todo, completeTodo, deleteTodo } = this.props;\r\n\r\n    let element;\r\n    if (this.state.editing) {\r\n      element = (\r\n        <TodoTextInput\r\n          text={todo.text}\r\n          editing={this.state.editing}\r\n          onSave={(text) => todo.id && this.handleSave(todo.id, text)}\r\n        />\r\n      );\r\n    } else {\r\n      element = (\r\n        <div className={style.view}>\r\n          <input\r\n            className={style.toggle}\r\n            type=\"checkbox\"\r\n            checked={todo.completed}\r\n            onChange={() => todo.id && completeTodo(todo.id)}\r\n          />\r\n          <label onDoubleClick={() => this.handleDoubleClick()}>{todo.text}</label>\r\n          <button\r\n            className={style.destroy}\r\n            onClick={() => {\r\n              if (todo.id) deleteTodo(todo.id);\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // TODO: compose\r\n    const classes = classNames({\r\n      [style.completed]: todo.completed,\r\n      [style.editing]: this.state.editing,\r\n      [style.normal]: !this.state.editing\r\n    });\r\n\r\n    return <li className={classes}>{element}</li>;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { TodoActions } from 'app/actions/todos';\r\nimport { TodoItem } from '../TodoItem';\r\nimport { TodoModel } from 'app/models/TodoModel';\r\n\r\nexport namespace TodoList {\r\n  export interface Props {\r\n    todos: TodoModel[];\r\n    actions: TodoActions;\r\n  }\r\n}\r\n\r\nexport class TodoList extends React.Component<TodoList.Props> {\r\n  renderToggleAll(): JSX.Element | void {\r\n    const { todos, actions } = this.props;\r\n    if (todos.length > 0) {\r\n      const hasIncompleted = todos.some((todo) => !todo.completed);\r\n      return (\r\n        <input\r\n          className={style.toggleAll}\r\n          type=\"checkbox\"\r\n          checked={hasIncompleted}\r\n          onChange={actions.completeAll}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { todos, actions } = this.props;\r\n    return (\r\n      <section className={style.main}>\r\n        {this.renderToggleAll()}\r\n        <ul className={style.normal}>\r\n          {todos.map((todo) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              completeTodo={actions.completeTodo}\r\n              deleteTodo={actions.deleteTodo}\r\n              editTodo={actions.editTodo}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { TodoActions } from 'app/actions';\r\nimport { RootState } from 'app/reducers';\r\nimport { TodoModel } from 'app/models';\r\nimport { omit } from 'app/utils';\r\nimport { Header, TodoList, Footer } from 'app/components';\r\n\r\nconst FILTER_VALUES = (Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map(\r\n  (key) => TodoModel.Filter[key]\r\n);\r\n\r\nconst FILTER_FUNCTIONS: Record<TodoModel.Filter, (todo: TodoModel) => boolean> = {\r\n  [TodoModel.Filter.SHOW_ALL]: () => true,\r\n  [TodoModel.Filter.SHOW_ACTIVE]: (todo) => !todo.completed,\r\n  [TodoModel.Filter.SHOW_COMPLETED]: (todo) => todo.completed\r\n};\r\n\r\nexport namespace App {\r\n  export interface Props extends RouteComponentProps<void> {\r\n    todos: RootState.TodoState;\r\n    actions: TodoActions;\r\n    filter: TodoModel.Filter;\r\n  }\r\n}\r\n\r\n@connect(\r\n  (state: RootState, ownProps): Pick<App.Props, 'todos' | 'filter'> => {\r\n    const hash = ownProps.location && ownProps.location.hash.replace('#', '');\r\n    const filter = FILTER_VALUES.find((value) => value === hash) || TodoModel.Filter.SHOW_ALL;\r\n    return { todos: state.todos, filter };\r\n  },\r\n  (dispatch: Dispatch): Pick<App.Props, 'actions'> => ({\r\n    actions: bindActionCreators(omit(TodoActions, 'Type'), dispatch)\r\n  })\r\n)\r\nexport class App extends React.Component<App.Props> {\r\n  static defaultProps: Partial<App.Props> = {\r\n    filter: TodoModel.Filter.SHOW_ALL\r\n  };\r\n\r\n  constructor(props: App.Props, context?: any) {\r\n    super(props, context);\r\n    this.handleClearCompleted = this.handleClearCompleted.bind(this);\r\n    this.handleFilterChange = this.handleFilterChange.bind(this);\r\n  }\r\n\r\n  handleClearCompleted(): void {\r\n    const hasCompletedTodo = this.props.todos.some((todo) => todo.completed || false);\r\n    if (hasCompletedTodo) {\r\n      this.props.actions.clearCompleted();\r\n    }\r\n  }\r\n\r\n  handleFilterChange(filter: TodoModel.Filter): void {\r\n    this.props.history.push(`#${filter}`);\r\n  }\r\n\r\n  render() {\r\n    const { todos, actions, filter } = this.props;\r\n    const activeCount = todos.length - todos.filter((todo) => todo.completed).length;\r\n    const filteredTodos = filter ? todos.filter(FILTER_FUNCTIONS[filter]) : todos;\r\n    const completedCount = todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0);\r\n\r\n    return (\r\n      <div className={style.normal}>\r\n        <Header addTodo={actions.addTodo} />\r\n        <TodoList todos={filteredTodos} actions={actions} />\r\n        <Footer\r\n          filter={filter}\r\n          activeCount={activeCount}\r\n          completedCount={completedCount}\r\n          onClickClearCompleted={this.handleClearCompleted}\r\n          onClickFilter={this.handleFilterChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export function omit<T extends object, K extends keyof T>(target: T, ...omitKeys: K[]): Omit<T, K> {\r\n  return (Object.keys(target) as K[]).reduce(\r\n    (res, key) => {\r\n      if (!omitKeys.includes(key)) {\r\n        res[key] = target[key];\r\n      }\r\n      return res;\r\n    },\r\n    {} as any\r\n  );\r\n}\r\n","import { Middleware } from 'redux';\r\n\r\nexport const logger: Middleware = (store) => (next) => (action) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console.log(action);\r\n  }\r\n  return next(action);\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport { RootState } from './state';\r\nimport { TodoActions } from 'app/actions/todos';\r\nimport { TodoModel } from 'app/models';\r\n\r\nconst initialState: RootState.TodoState = [\r\n  {\r\n    id: 1,\r\n    text: 'Use Redux',\r\n    completed: false\r\n  }\r\n];\r\n\r\nexport const todoReducer = handleActions<RootState.TodoState, TodoModel>(\r\n  {\r\n    [TodoActions.Type.ADD_TODO]: (state, action) => {\r\n      if (action.payload && action.payload.text) {\r\n        return [\r\n          {\r\n            id: state.reduce((max, todo) => Math.max(todo.id || 1, max), 0) + 1,\r\n            completed: false,\r\n            text: action.payload.text\r\n          },\r\n          ...state\r\n        ];\r\n      }\r\n      return state;\r\n    },\r\n    [TodoActions.Type.DELETE_TODO]: (state, action) => {\r\n      return state.filter((todo) => todo.id !== (action.payload as any));\r\n    },\r\n    [TodoActions.Type.EDIT_TODO]: (state, action) => {\r\n      return state.map((todo) => {\r\n        if (!todo || !action || !action.payload) {\r\n          return todo;\r\n        }\r\n        return (todo.id || 0) === action.payload.id ? { ...todo, text: action.payload.text } : todo;\r\n      });\r\n    },\r\n    [TodoActions.Type.COMPLETE_TODO]: (state, action) => {\r\n      return state.map((todo) =>\r\n        todo.id === (action.payload as any) ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    },\r\n    [TodoActions.Type.COMPLETE_ALL]: (state, action) => {\r\n      return state.map((todo) => ({ ...todo, completed: true }));\r\n    },\r\n    [TodoActions.Type.CLEAR_COMPLETED]: (state, action) => {\r\n      return state.filter((todo) => todo.completed === false);\r\n    }\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { RootState } from './state';\r\nimport { todoReducer } from './todos';\r\n\r\nexport { RootState };\r\n\r\n// NOTE: current type definition of Reducer in 'redux-actions' module\r\n// doesn't go well with redux@4\r\nexport const rootReducer = combineReducers<RootState>({\r\n  todos: todoReducer as any\r\n});\r\n","import { Store, createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { logger } from 'app/middleware';\r\nimport { RootState, rootReducer } from 'app/reducers';\r\n\r\nexport function configureStore(initialState?: RootState): Store<RootState> {\r\n  let middleware = applyMiddleware(logger);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    middleware = composeWithDevTools(middleware);\r\n  }\r\n\r\n  const store = createStore(rootReducer as any, initialState as any, middleware) as Store<\r\n    RootState\r\n  >;\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('app/reducers', () => {\r\n      const nextReducer = require('app/reducers');\r\n      store.replaceReducer(nextReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { configureStore } from 'app/store';\r\nimport { Router } from 'react-router';\r\nimport { App } from './app';\r\n\r\n// prepare store\r\nconst history = createBrowserHistory();\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import { createAction } from 'redux-actions';\r\nimport { TodoModel } from 'app/models';\r\n\r\nexport namespace TodoActions {\r\n  export enum Type {\r\n    ADD_TODO = 'ADD_TODO',\r\n    EDIT_TODO = 'EDIT_TODO',\r\n    DELETE_TODO = 'DELETE_TODO',\r\n    COMPLETE_TODO = 'COMPLETE_TODO',\r\n    COMPLETE_ALL = 'COMPLETE_ALL',\r\n    CLEAR_COMPLETED = 'CLEAR_COMPLETED'\r\n  }\r\n\r\n  export const addTodo = createAction<PartialPick<TodoModel, 'text'>>(Type.ADD_TODO);\r\n  export const editTodo = createAction<PartialPick<TodoModel, 'id'>>(Type.EDIT_TODO);\r\n  export const deleteTodo = createAction<TodoModel['id']>(Type.DELETE_TODO);\r\n  export const completeTodo = createAction<TodoModel['id']>(Type.COMPLETE_TODO);\r\n  export const completeAll = createAction(Type.COMPLETE_ALL);\r\n  export const clearCompleted = createAction(Type.CLEAR_COMPLETED);\r\n}\r\n\r\nexport type TodoActions = Omit<typeof TodoActions, 'Type'>;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_3Ivjf\",\"toggle\":\"gyYcA\",\"destroy\":\"_6oXTL\",\"edit\":\"Dlke2\",\"editing\":\"atkUq _3Ivjf\",\"view\":\"R2I1d\",\"completed\":\"_2d4Cr\"};"],"sourceRoot":""}